datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

model User {
  id           Int          @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String       @unique
  phoneNumber  String?
  gender       Gender?
  dateOfBirth  DateTime?
  role         Role
  nationalId   String?      // For citizens
  passportNo   String?      // For foreigners
  businessRegNo String?     // For business owners
  appointments Appointment[] @relation("UserAppointments")
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Department {
  id          Int       @id @default(autoincrement())
  name        String
  code        String    @unique
  description String
  services    Service[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Service {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  department   Department @relation(fields: [departmentId], references: [id])
  departmentId Int
  appointments Appointment[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Appointment {
  id           Int       @id @default(autoincrement())
  user         User      @relation("UserAppointments", fields: [userId], references: [id])
  userId       Int
  service      Service   @relation(fields: [serviceId], references: [id])
  serviceId    Int
  type         AppointmentType
  status       AppointmentStatus
  scheduledAt  DateTime
  notes        String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

enum Role {
  CITIZEN
  FOREIGNER
  BUSINESS_OWNER
  ADMIN
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum AppointmentType {
  IN_PERSON
  ONLINE
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}
